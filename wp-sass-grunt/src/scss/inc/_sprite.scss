/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$facebook-w-name: 'facebook_w';
$facebook-w-x: 0px;
$facebook-w-y: 45px;
$facebook-w-offset-x: 0px;
$facebook-w-offset-y: -45px;
$facebook-w-width: 38px;
$facebook-w-height: 37px;
$facebook-w-total-width: 38px;
$facebook-w-total-height: 162px;
$facebook-w-image: '../images/sprite.png';
$facebook-w: (0px, 45px, 0px, -45px, 38px, 37px, 38px, 162px, '../images/sprite.png', 'facebook_w', );
$menu-name: 'menu';
$menu-x: 0px;
$menu-y: 18px;
$menu-offset-x: 0px;
$menu-offset-y: -18px;
$menu-width: 31px;
$menu-height: 24px;
$menu-total-width: 38px;
$menu-total-height: 162px;
$menu-image: '../images/sprite.png';
$menu: (0px, 18px, 0px, -18px, 31px, 24px, 38px, 162px, '../images/sprite.png', 'menu', );
$plane-name: 'plane';
$plane-x: 0px;
$plane-y: 0px;
$plane-offset-x: 0px;
$plane-offset-y: 0px;
$plane-width: 17px;
$plane-height: 15px;
$plane-total-width: 38px;
$plane-total-height: 162px;
$plane-image: '../images/sprite.png';
$plane: (0px, 0px, 0px, 0px, 17px, 15px, 38px, 162px, '../images/sprite.png', 'plane', );
$twitter-w-name: 'twitter_w';
$twitter-w-x: 0px;
$twitter-w-y: 85px;
$twitter-w-offset-x: 0px;
$twitter-w-offset-y: -85px;
$twitter-w-width: 38px;
$twitter-w-height: 37px;
$twitter-w-total-width: 38px;
$twitter-w-total-height: 162px;
$twitter-w-image: '../images/sprite.png';
$twitter-w: (0px, 85px, 0px, -85px, 38px, 37px, 38px, 162px, '../images/sprite.png', 'twitter_w', );
$youtube-w-name: 'youtube_w';
$youtube-w-x: 0px;
$youtube-w-y: 125px;
$youtube-w-offset-x: 0px;
$youtube-w-offset-y: -125px;
$youtube-w-width: 38px;
$youtube-w-height: 37px;
$youtube-w-total-width: 38px;
$youtube-w-total-height: 162px;
$youtube-w-image: '../images/sprite.png';
$youtube-w: (0px, 125px, 0px, -125px, 38px, 37px, 38px, 162px, '../images/sprite.png', 'youtube_w', );
$spritesheet-width: 38px;
$spritesheet-height: 162px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($facebook-w, $menu, $plane, $twitter-w, $youtube-w, );
$spritesheet: (38px, 162px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
